geoip_country /usr/share/GeoIP/GeoIP.dat;

# Sample Blacklisting by Country.
map $geoip_country_code $allowed_country {
        default yes;
        SK no;
        RU no;
        CH no;
    }
# Sample Whitelisting by IP range.
geo $block_almost_everyone {
    default         1;
    127.0.0.1/32    0;
    172.168.0.0/12  0;  #rfc1918
    192.168.0.0/16  0;
    10.0.0.0/8      0;
    2001:db8::/32   0;  #rfc3849
}

# Rate limiting for /webhooks.
limit_conn_zone $binary_remote_addr zone=addr:10m;
limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;


upstream nodered {
   server 127.0.0.1:1880;
   keepalive 5;
}

upstream nodered-listener {
   server 127.0.0.1:80;
   keepalive 2;
}

server {
        listen 80;
        server_name node-red-zabbix;
        access_log /var/log/nginx/nodered.log;
        error_log /var/log/nginx/nodered.error;

        auth_basic "Protected Node-Red";
        auth_basic_user_file /var/www/.htpasswd;

        root /usr/share/nginx;
        client_max_body_size 1m;
        client_body_buffer_size 128k;

        location / {
            proxy_pass http://nodered;
            proxy_http_version 1.1;
            proxy_set_header Connection "Keep-Alive";
            proxy_set_header Proxy-Connection "Keep-Alive";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location ~ /webhook/(?<stuff>.*) {
            limit_conn addr 1;
            limit_req zone=one;
            limit_rate 1k;

            if ($allowed_country = no) { return 444; }
            if ($block_almost_everyone = 0) { return 444; }

            proxy_pass http://nodered/$stuff;
            auth_basic "off";
            proxy_http_version 1.1;
            proxy_set_header Connection "Keep-Alive";
            proxy_set_header Proxy-Connection "Keep-Alive";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }


}

